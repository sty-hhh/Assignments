     	.data
X:   	.word   56
Y:  	.word   10
        .text       
main:
	lw	$a0,X			# $a0为余数
	lw	$a1,Y			# $a1为除数的高32位
	addi	$a2,$0,0		# $a2为除数的低32位
	addi   	$s0,$0,0xFFFFFFFE	# $s0用于最低位 置0
	addi   	$s1,$0,1		# $s1用于最低位 置1，并可判断最低位是否是1
	addi	$s2,$0,0x80000000	# $s2用于最高位 置1
	addi	$s3,$0,33		# $s3用于判断循环次数
		
loop:					# 判断高位是0，低位大于0，可进行正常无符号除法
	sgt	$t2,$a1,$0		# 如果除数高32位大于0，$t2 = 1
	slti	$t3,$a2,1		# 如果除数低32位小于1，$t3 = 1
	or	$t4,$t2,$t3		# 满足以上两个条件之一，就不能进行正常无符号除法运算
	beq	$t4,$0,func		# 如果除数高32位为0，低32位大于0，可进行正常无符号除法运算，跳转到func
	
	and	$t1,$a1,$s1		# 如果高32位寄存器除数的最低位是1，$t1 = 1
	beq	$t1,$0,then1		# 如果$t1等于0，跳转到then1
					# 如果高32位寄存器除数的最低位是1
	srl	$a2,$a2,1		# 将除数低32位右移一位
	or 	$a2,$a2,$s2		# 将除数低32位的最高位 置1
	srl	$a1,$a1,1		# 将除数高32位右移一位
	j	then2			# 跳转到then2（此时已完成除数右移，判断次数即可）
	
func:					# 正常的无符号除法运算
	sub	$a0,$a0,$a2		# 余数 = 余数 - 除数
	slti	$t0,$a0,0		
	beq	$t0,$0,L		# 如果余数大于0，跳转到 L
	
					# 余数小于0，那么...
	add	$a0,$a0,$a2		# 余数 = 余数 + 除数
	sll	$v0,$v0,1		# 将商左移一位
	and	$v0,$v0,$s0		# 将商的最低位 置0
	j 	then1			# 跳转到then1	
		
L:					# 余数大于0，那么...
	sll	$v0,$v0,1 		# 将商左移一位
	or	$v0,$v0,$s1		# 将商的最低位 置1
	j 	then1			# 跳转到then1
	
then1:	srl	$a2,$a2,1		# 除数低32位右移一位
	srl	$a1,$a1,1 		# 除数高32位右移一位	
then2:	addi	$s3,$s3,-1		# 次数减1
	beq	$s3,$0,final		# 如果循环33次，跳转到final
	j	loop			# 未循环33次，继续循环
final:
	add	$v1,$a0,$0		# 将余数保存到$v1寄存器
	add	$a0,$v0,$0		# 输出商
	li	$v0,1
	syscall				
	li	$v0,11			# 输出回车
	li	$a0,'\n'
	syscall
	add	$a0,$v1,$0		# 输出余数
	li	$v0,1
	syscall
	li	$v0,10			# 程序结束
	syscall
